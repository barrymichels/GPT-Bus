extends layout

block content
  .flex.justify-center.items-center.h-screen
    .bg-gray-700.p-6.rounded-lg.shadow-lg
      if activeTrip
        h2.text-xl.font-bold.text-white.mb-4 Editing Rider for #{activeTrip.name}
      form(method='post', action='/edit-rider/' + rider.id)
        // Basic Info
        .mb-4
          label(for='name').block.text-sm.font-bold.mb-2.text-white Name
          input#name(type='text', name='name', value=rider.name, class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline")
        .mb-4
          label(for='congregation').block.text-sm.font-bold.mb-2.text-white Congregation
          input#congregation(type='text', name='congregation', value=rider.congregation, class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline")
        .mb-4
          label(for='email').block.text-sm.font-bold.mb-2.text-white Email
          input#email(type='email', name='email', value=rider.email, class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline")
        .mb-4
          label(for='phone').block.text-sm.font-bold.mb-2.text-white Mobile Phone
          input#phone(type='tel', name='phone', value=rider.phone, class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline")
        .mb-4
          label(for='other_phone').block.text-sm.font-bold.mb-2.text-white Other Phone
          input#other_phone(type='tel', name='other_phone', value=rider.other_phone, class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline")
        
        // Address
        .mb-4
          label(for='street').block.text-sm.font-bold.mb-2.text-white Street Address
          input#street(type='text', name='street', value=rider.street, class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline")
        .mb-4
          label(for='city').block.text-sm.font-bold.mb-2.text-white City
          input#city(type='text', name='city', value=rider.city, class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline")
        .mb-4
          label(for='state').block.text-sm.font-bold.mb-2.text-white State
          input#state(type='text', name='state', value=rider.state, class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline")
        .mb-4
          label(for='zip').block.text-sm.font-bold.mb-2.text-white Zip Code
          input#zip(type='text', name='zip', value=rider.zip, class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline")
        
        if activeTrip
          // Trip-specific Info
          .mb-4
            label(class="flex items-center space-x-2 text-white")
              input(type='checkbox', name='instructions_sent', checked=rider.instructions_sent === 1, class="form-checkbox h-5 w-5 text-blue-500")
              span.text-sm.font-bold Instructions Sent
        
        .flex.items-center.justify-between
          button(type='submit', class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline") Update Rider
          a(href=`/rider/${rider.id}/emergency-contacts`, class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline") Emergency Contacts
          a(href='/dashboard', class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline") Back
          button(type='button', class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline", onclick="showDeleteModal()") Delete Rider

  // Delete Confirmation Modal
  #deleteModal.fixed.inset-0.bg-gray-900.bg-opacity-50.hidden.flex.items-center.justify-center
    .bg-gray-800.p-6.rounded-lg.shadow-xl.max-w-md.w-full.mx-4
      h3.text-xl.font-bold.text-white.mb-4 Delete Rider
      p.text-gray-300.mb-6 How would you like to remove this rider?
      .space-y-4
        button(onclick="deleteFromTrip()" class="w-full bg-yellow-600 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded") Remove from Current Trip Only
        button(onclick="deleteCompletely()" class="w-full bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded") Delete Completely from System
        button(onclick="hideDeleteModal()" class="w-full bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded") Cancel

  script.
    function showDeleteModal() {
      document.getElementById('deleteModal').classList.remove('hidden');
    }

    function hideDeleteModal() {
      document.getElementById('deleteModal').classList.add('hidden');
    }

    function deleteFromTrip() {
      window.location.href = `/delete-rider/#{rider.id}/from-trip`;
    }

    function deleteCompletely() {
      if (confirm("Are you absolutely sure? This will permanently delete all rider data and cannot be undone.")) {
        window.location.href = `/delete-rider/#{rider.id}/complete`;
      }
    }
